
// anti-macro gump
// Gump information:
// Serial=0x0027F43B
// ID=0x0A3635D0
// X=0
// Y=0

// Gump buttons:
// [1]	 button 235 367 2128 2129 1 0 1 

// Gump checks & radios: order is the same as for text
// [2001]	 radio 170 307 5002 5003 1 2001 
// [2002]	 radio 170 327 5002 5003 0 2002 
// [2003]	 radio 170 347 5002 5003 0 2003 

// Gump entries:

// Gump all commands:
//  page 0 
//  noclose 
//  nomove 
//  nodispose 
//  resizepic 155 217 8192 250 180 
//  button 235 367 2128 2129 1 0 1 
//  text 170 232 32 0 
//  text 170 257 995 1 
//  text 170 272 995 2 
//  text 170 287 995 3 
//  radio 170 307 5002 5003 1 2001 
//  radio 170 327 5002 5003 0 2002 
//  radio 170 347 5002 5003 0 2003 
//  text 195 307 52 4 
//  text 195 327 43 5 
//  text 195 347 56 6 

// Gump text: order is the same as for radio
// [0]	This is a check for macroing.
// [1]	You have 5 minutes to select
// [2]	the option 14100 before you
// [3]	will be jailed.
// [4]	3536
// [5]	15462
// [6]	14100

// function GeneratedScript_111155()
// {
// 	if (Orion.WaitForGump(1000))
// 	{
// 		var gump0 = Orion.GetGump('last');
// 		if ((gump0 !== null) && (!gump0.Replayed()) && (gump0.ID() === '0x0A3635D0'))
// 		{
// 			var gumpHook0 = Orion.CreateGumpHook(1);
// 			gumpHook0.AddCheck(2003, true);
// 			gumpHook0.AddCheck(2001, false);
// 			gump0.Select(gumpHook0);
// 			Orion.Wait(100);
// 		}
// 	}
// }

function list_gumps()
{
    for (var _i=0; _i<Orion.GumpCount();_i++) {
        Orion.Print('gump #'+_i);
        var gump = Orion.GetGump(_i);
        if (!gump) return
        if (!gump.Replayed()) {
            Orion.Print('Found the gump'+gump.ID());
            Orion.Print('Serial = '+gump.Serial());
            Orion.Print('TextList = '+gump.TextList() );
            Orion.Print('TextList len = '+gump.TextList().length );
            Orion.Print('ButtonList = '+gump.ButtonList() );
            Orion.Print('CheckboxList = '+gump.CheckboxList() );
            Orion.Print('CommandList = '+gump.CommandList() );
            Orion.Print('TilepicList = '+gump.TilepicList() );
            Orion.Print('RadioList = '+gump.RadioList() );
            
        }
    }
}

function find_gump(gump_id)
{
    for (var _i=0; _i<Orion.GumpCount();_i++) {
        //Orion.Print('_i='+_i);
        var gump = Orion.GetGump(_i);
        if (!gump) return
        if (!gump.Replayed() && gump.ID() == gump_id ) {
            Orion.Print('Found the gump');
            return  gump;
        }
    }
}


// function test_list_loot() {
//     // Orion.WaitForAddObject('test_item');
//     // test_item = Orion.FindObject('test_item')
//     loot_list = Orion.GetFindList(LOOT_FINDLIST);
//     if (loot_list) {
//         loot_list_items = loot_list.Items();
//         for (i = 0; i < loot_list_items.length; i++) {
//             Orion.Print(loot_list_items[i].Graphic())
//         }
//     } else {
//         Orion.Print('ERROR: no such findlist {' + LOOT_FINDLIST + '}');
//     }

// }

// function test_list_lookup() {
//     Orion.WaitForAddObject('test_item');
//     test_item = Orion.FindObject('test_item')
//     loot_list = Orion.GetFindList(LOOT_FINDLIST);
//     loot_list_items = loot_list.Items();
//     if (value_in_array(test_item.Graphic(), loot_list_items.Graphic())) {
//         Orion.Print('take it!')
//     } else {
//         Orion.Print('thats sh1t')
//     }

// }

//function ttimer() {
//  const TIMER_X = 1175
//  const TIMER_Y = 550
//	 test_timer(10000)
//}

//function test_los() {
//	Orion.SetLOSOptions("pollosthroughtwindows"); //|polusenoshoot");
//	item = '0x4C10B1B5';
//	Orion.Print(Orion.InLOS(item));
//}

// function test_hits() {
//    _target = Orion.ClientLastAttack();
//    if (Orion.ObjectExists(_target)) {
//       _target_obj = Orion.FindObject(_target);
//       Orion.Print(_target_obj.Hits()+'/'+_target_obj.MaxHits());
//    }
// }

// function test_sub_in_string() {
//    sub = 'aba'
//    str = 'kabab'
//    res = str.indexOf(sub)
//    Orion.Print(res);
// }

// function test_typof() {
//    Orion.Print(typeof 123);
// }

// function test_rewrite() {
//    rewrite_file(EXP_FILE_PATH, 0)
// }

// function test_round() {
//    a = 1122334455
//    b = a / 100000
//    Orion.Print(b);
//    c = parseFloat(b).toFixed(2);
//    Orion.Print(c);
// }

// function test_timer(msec) {
//    Orion.AddDisplayTimer("healing", msec, "custom", "LineBar", "Healing...", TIMER_X, TIMER_Y);
//    Orion.DisplayTimerSetIcon("healing", "Left", "0x0E21");
//    Orion.DisplayTimerSetSize("healing", 100, 30);
// }

// function test_notify() {
//    notify('aaa', 3)
// }

// function test_discord() {
//    if (Orion.Connected()) {
//       discord_post("Some polish.");
//    } else {
//       discord_post("Some polish.");
//    }
// }

// function test_name_profile() {
//    Orion.Print('my name is ' + Player.Name());
//    Orion.Print('my profile is ' + Player.Profile());
// }

// function test_val() {
// 	Orion.Print(Orion.SkillValue('Tactics'));
// }

// function test_sound() {
//    Orion.PlayWav('/home/gff/games/orion-native/OA/reminder.wav');
// }

// function notify_test() {
//     repeats = 3
//     self_print('test', 2190);
//     for (_i = 0; _i < repeats; _i++) {
//         Orion.PlayWav(NOTIFY_SOUND);
//         Orion.Wait(700);
//     }
// }


// //Send message to:

// // Discord
// var bot = "Webhook url here"; // Webhook url
// var paramText = "content=";

// Orion.HttpPost(bot, paramText + "Test message");

// // Telegram
// var bot = "https://api.telegram.org/botTOKEN/sendMessage"; // "TOKEN" change to your bot token
// var paramID = "chat_id=" + "Telegram chat id here";
// var paramText = "text=";
// var params = paramID + "&" + paramText;

// Orion.HttpPost(bot, params + "Test message");