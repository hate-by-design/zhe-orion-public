//#include ZHE/helpers.oajs
//#include ZHE/heal.oajs
//#include ZHE/test_zone.oajs
//#include ZHE/services.oajs
//#include ZHE/utils.oajs
//#include ZHE/skills.oajs

// Types
CLEAN_BANDAGES = 0x0e21;
//// Healing
// Health % to start healing
HEALING_THRESHOLD = 85;

const HEALING_TIMER_X = 1175
const HEALING_TIMER_Y = 550

const NOTIFY_SOUND = "reminder.wav"
const ALERT_SOUND = "OA/alert.wav"


function Autostart() {
	Orion.Exec('autoheal', true);
	Orion.Exec('auto_hungry', true);
	Orion.Exec('watch_durability', true);
	Orion.Exec('auto_guards', true);
	Orion.Exec('lag_watch', true);
	Orion.Exec('watch_death', true);
	
}

//// Attack
function attack_nts() {
	_target = Orion.TargetSystemSerial();
	if (_target) {
		_enemy = Orion.FindObject(_target);
		if (_enemy) {
			Orion.CharPrint(_enemy.Serial(), 53, "> Target <");
			if (!Player.WarMode()) Orion.WarMode(true);
			Orion.Attack(_target);
		}
	}
}

function unwar() {
	var shield = 0x1b76;
	while (!Player.Dead()) {
		if (!Orion.ObjAtLayer("LeftHand")) {
			if (Orion.FindType(shield)) {
				Orion.EquipT(shield);
				Orion.Wait(500);
			}
		}
		if (Player.WarMode() == true) Orion.WarMode(false);
		Orion.Wait(100);
	}
}
